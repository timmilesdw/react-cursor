{"version":3,"sources":["../../src/cursor.js","../../src/index.js","App.js","index.js"],"names":["Cursor","x","y","color","noRing","mixBlend","dotSize","ringSize","transitionTime","CursorDot","style","transform","props","CursorRing","CursorProvider","children","useEffect","window","setVisibility","cursor","setCursor","useState","visibility","onMouseMove","e","pageY","CursorWrapper","styled","GlobalStyle","createGlobalStyle","App","setColor","transition","setTransition","ring","setRing","setRingSize","Text","ControlsWrapper","Controls","type","value","onChange","target","placeholder","onClick","div","ReactDOM","render","document","getElementById"],"mappings":"q3BAEO,IAAMA,EAAS,SAAC,GASjB,IARJC,EAQI,EARJA,EACAC,EAOI,EAPJA,EACAC,EAMI,EANJA,MACAC,EAKI,EALJA,OACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,SACAC,EACI,EADJA,eAKA,OACE,6BACE,qBACEL,MADF,EAEEE,SAFF,EAGEC,QAHF,EAIEL,EAJF,EAKEC,EAAGA,IAEL,qBACEE,OADF,EAEED,MAFF,EAGEE,SAHF,EAIEG,eAJF,EAKED,SALF,EAMEN,EANF,EAOEC,EAAGA,MAMLO,EAAY,eAAiB,kBAAY,CAC7CC,MAAO,CACLC,UAAW,aAAaC,EAAf,SAA6BA,EAA7B,YAFK,CAAH,KAKJ,mBAAYA,UAAgBA,UAAhBA,KAAZ,SACC,mBAAYA,UAAgBA,UAAhBA,KAAZ,SAGI,mBAAYA,QAAcA,EAAdA,MAAZ,WAKI,mBAAYA,wBAAZ,UAEdC,EAAa,eAAiB,kBAAY,CAC9CH,MAAO,CACLC,UAAW,cAAaC,IAAUA,WAAzB,aACPA,IAAUA,WADH,eAFM,CAAH,KAOL,mBAAYA,WAAiBA,WAAjBA,KAAZ,UACC,mBAAYA,WAAiBA,WAAjBA,KAAZ,UAEA,mBACRA,qBAA2BA,EAA3BA,MADQ,qBAEI,mBACZA,8BACiBA,EADjBA,6BADY,6BAQI,mBAAYA,wBAAZ,UACP,mBAAYA,gBAAZ,W,oPCtEAE,EAAiB,SAAC,GAA6E,IAA3EC,EAA2E,EAA3EA,SAAUZ,EAAiE,EAAjEA,MAAOC,EAA0D,EAA1DA,OAA2BG,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,eACnFQ,qBAAU,WACJC,sBAA0BC,GAA1BD,GAAiDC,GAAjDD,GACAE,IAAWF,OAAXE,YAA+BC,EAAU,CAACnB,EAAGA,IAAKC,EAAGA,IACrDiB,IAAWF,OAAXE,aAAgCC,EAAU,CAACnB,EAAD,EAAOC,EAAGA,SAJ8C,MAO5EmB,mBAAS,CAACpB,EAAD,EAAOC,EAAG,IAAxCiB,EAPiG,KAOzFC,EAPyF,OAQpEC,oBARoE,GAQjGC,EARiG,KAQrFJ,EARqF,KAUxG,OACA,qBAAeK,YAAa,mBAAOH,EAAU,CAACnB,EAAGuB,EAAJ,MAAatB,EAAGsB,EAAEC,UAC3D,oBADJ,MAEKH,EAAa,qBACEnB,MADF,EAEEC,OAFF,EAGEG,SAHF,EAIEC,eAJF,EAKEP,EAAGkB,EALL,EAMEjB,EAAGiB,EAAOjB,IAR9B,KADA,IAeEwB,EAAgBC,IAAH,SAMbC,EAAcC,YAAH,K,ifC9BjB,IAqDeC,EArDH,WAAO,IAAD,EAEYT,mBAAS,SAFrB,mBAERlB,EAFQ,KAED4B,EAFC,OAGsBV,mBAAS,KAH/B,mBAGRW,EAHQ,KAGIC,EAHJ,OAIUZ,oBAAS,GAJnB,mBAIRa,EAJQ,KAIFC,EAJE,OAKkBd,mBAAS,IAL3B,mBAKRd,EALQ,KAKE6B,EALF,KAOhB,OACE,kBAAC,EAAD,CAAgBjC,MAAOA,EACPC,OAAQ8B,EACR3B,SAAUA,EACVC,eAAgBwB,GAC9B,kBAACK,EAAD,4CAA0C,6BAA1C,qFAAiI,6BAAjI,6CAEA,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,sCACA,mDACA,2BAAOC,KAAK,OACZC,MAAOtC,EACPuC,SAAU,SAAAlB,GAAC,OAAIO,EAASP,EAAEmB,OAAOF,QACjCG,YAAY,2DAGd,kBAACL,EAAD,KACE,iDACA,4DACA,2BACAE,MAAOT,EACPU,SAAU,SAAAlB,GAAC,OAAIS,EAAcT,EAAEmB,OAAOF,QACtCG,YAAY,oCAGd,kBAACL,EAAD,KACE,qCACA,qDACA,4BAAQM,QAAS,kBAAMV,GAASD,KAAQA,EAAO,cAAgB,iBAEjE,kBAACK,EAAD,KACE,0CACA,sDACA,2BACAE,MAAOlC,EACPmC,SAAU,SAAAlB,GAAC,OAAIY,EAAYZ,EAAEmB,OAAOF,QACpCG,YAAY,8BAYhBN,EAAkBX,IAAOmB,IAAV,KAQfP,EAAWZ,IAAOmB,IAAV,KAORT,EAAOV,IAAOmB,IAAV,KCtEVC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a887fa9e.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nexport const Cursor = ({\n  x,\n  y,\n  color,\n  noRing,\n  mixBlend,\n  dotSize,\n  ringSize,\n  transitionTime\n}) => {\n  \n  \n  \n  return (\n    <div>\n      <CursorDot\n        color={color}\n        mixBlend={mixBlend}\n        dotSize={dotSize}\n        x={x}\n        y={y}\n      />\n      <CursorRing\n        noRing={noRing}\n        color={color}\n        mixBlend={mixBlend}\n        transitionTime={transitionTime}\n        ringSize={ringSize}\n        x={x}\n        y={y}\n      />\n    </div>\n  )\n}\n\nconst CursorDot = styled.div.attrs((props) => ({\n  style: {\n    transform: `translate(${props.x}px, ${props.y}px)`\n  }\n}))`\n  width: ${(props) => (props.dotSize ? props.dotSize + 'px' : '8px')};\n  height: ${(props) => (props.dotSize ? props.dotSize + 'px' : '8px')};\n  position: absolute;\n  transform: translate(-50%, -50%);\n  background: ${(props) => (props.color ? props.color : 'black')};\n  z-index: 999;\n  border-radius: 100%;\n  pointer-events: none;\n  overflow: auto;\n  mix-blend-mode: ${(props) => (props.mixBlend ? 'difference' : 'none')};\n`\nconst CursorRing = styled.div.attrs((props) => ({\n  style: {\n    transform: `translate(${props.x - props.ringSize / 2.2}px, ${\n      props.y - props.ringSize / 2.2\n    }px)`\n  }\n}))`\n  width: ${(props) => (props.ringSize ? props.ringSize + 'px' : '36px')};\n  height: ${(props) => (props.ringSize ? props.ringSize + 'px' : '36px')};\n  border-radius: 100%;\n  border: ${(props) =>\n    props.color ? `2px solid ${props.color}` : '2px solid black'};\n  transition: ${(props) =>\n    props.transitionTime\n      ? `transform ${props.transitionTime}ms ease-out`\n      : 'transform 0.1s ease-out'};\n  pointer-events: none;\n  transform: translate(-50%, -50%);\n  z-index: 999;\n  position: absolute;\n  mix-blend-mode: ${(props) => (props.mixBlend ? 'difference' : 'none')};\n  display: ${(props) => (props.noRing ? 'none' : 'block')};\n`\n","import React, { useState, useEffect } from 'react'\nimport styled, {createGlobalStyle} from 'styled-components'\nimport { Cursor } from './cursor'\n\nexport const CursorProvider = ({ children, color, noRing, mixBlend, dotSize, ringSize, transitionTime }) => {\n    useEffect(() => {\n        { window.innerWidth < 600 ? setVisibility(false) : setVisibility(true) }\n        { cursor.x > window.innerWidth ? setCursor({x: x--, y: y}) : null }\n        { cursor.y > window.innerHeight ? setCursor({x: x, y: y--}) : null }\n    })\n    \n    const [cursor, setCursor] = useState({x: 0, y: 0})\n    const [visibility, setVisibility] = useState(true)\n\n    return (\n    <CursorWrapper onMouseMove={(e) => setCursor({x: e.pageX, y: e.pageY})}>\n        <GlobalStyle/>\n        {visibility ? <Cursor \n                        color={color} \n                        noRing={noRing} \n                        ringSize={ringSize}\n                        transitionTime={transitionTime}\n                        x={cursor.x} \n                        y={cursor.y}/> \n                : null}\n        {children}\n    </CursorWrapper>)\n}\n\nconst CursorWrapper = styled.div`\n    position: fixed;\n    width: 100vw;\n    height: 100vh;\n    z-index: 999;\n`\nconst GlobalStyle = createGlobalStyle`\n* {\n    cursor: none !important;\n}\n`","import React, { useState } from 'react'\nimport { CursorProvider } from 'react-cursor-custom'\n\nimport styled from 'styled-components'\n\nconst App = () => {\n  \n  const [ color, setColor ] = useState('black')\n  const [ transition, setTransition ] = useState(100)\n  const [ ring, setRing ] = useState(false)\n  const [ ringSize, setRingSize ] = useState(36)\n\n  return (\n    <CursorProvider color={color} \n                    noRing={ring}  \n                    ringSize={ringSize}\n                    transitionTime={transition}>\n      <Text>Simple React Custom Cursor Component<br/>No lags is achieved by using transform property, which is rendered by GPU, not CPU<br/>You can play with props in the form under</Text>\n      \n      <ControlsWrapper>\n        <Controls>\n          <div>Color</div>\n          <div>color prop :string</div>\n          <input type=\"text\"\n          value={color}\n          onChange={e => setColor(e.target.value)}\n          placeholder=\"Type color here in hex or valid css color like yellow\"\n          />\n        </Controls>\n        <Controls>\n          <div>Transition in ms</div>\n          <div>transitionTime prop :number</div>\n          <input\n          value={transition}\n          onChange={e => setTransition(e.target.value)}\n          placeholder=\"Type transition duration in ms\"\n          />\n        </Controls>\n        <Controls>\n          <div>Ring</div>\n          <div>noRing prop :boolean</div>\n          <button onClick={() => setRing(!ring)}>{ring ? 'Enable ring' : 'Disable ring'}</button>\n        </Controls>\n        <Controls>\n          <div>Ring Size</div>\n          <div>ringSize prop :number</div>\n          <input\n          value={ringSize}\n          onChange={e => setRingSize(e.target.value)}\n          placeholder=\"Type size of the ring\"\n          />\n        </Controls>\n      </ControlsWrapper>\n\n    </CursorProvider>\n  )\n}\n\nexport default App;\n\n\nconst ControlsWrapper = styled.div`\n  width: 70%;\n  display: flex;\n  margin: 0 auto;\n  justify-content: space-around;\n  flex-wrap: wrap;\n`\n\nconst Controls = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-direction: column;\n  width: 50%\n`\nconst Text = styled.div`\n  font-size: 36px;\n  text-align: center;\n  height: 300px;\n`","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}