{"version":3,"sources":["../../src/cursor.js","../../src/index.js","App.js","index.js"],"names":["Cursor","x","y","color","noRing","mixBlend","dotSize","ringSize","transitionTime","CursorDot","style","transform","props","CursorRing","CursorProvider","children","useEffect","window","setVisibility","cursor","setCursor","useState","visibility","onMouseMove","e","pageY","CursorWrapper","styled","GlobalStyle","createGlobalStyle","App","setColor","transition","setTransition","ring","setRing","setRingSize","Text","ControlsWrapper","Controls","type","value","onChange","target","placeholder","onClick","div","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2308ac7a.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nexport const Cursor = ({\r\n  x,\r\n  y,\r\n  color,\r\n  noRing,\r\n  mixBlend,\r\n  dotSize,\r\n  ringSize,\r\n  transitionTime\r\n}) => {\r\n  return (\r\n    <div>\r\n      <CursorDot\r\n        color={color}\r\n        mixBlend={mixBlend}\r\n        dotSize={dotSize}\r\n        x={x}\r\n        y={y}\r\n      />\r\n      <CursorRing\r\n        noRing={noRing}\r\n        color={color}\r\n        mixBlend={mixBlend}\r\n        transitionTime={transitionTime}\r\n        ringSize={ringSize}\r\n        x={x}\r\n        y={y}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CursorDot = styled.div.attrs((props) => ({\r\n  style: {\r\n    transform: `translate(${props.x}px, ${props.y}px)`\r\n  }\r\n}))`\r\n  width: ${(props) => (props.dotSize ? props.dotSize + 'px' : '8px')};\r\n  height: ${(props) => (props.dotSize ? props.dotSize + 'px' : '8px')};\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  background: ${(props) => (props.color ? props.color : 'black')};\r\n  z-index: 999;\r\n  border-radius: 100%;\r\n  pointer-events: none;\r\n  overflow: auto;\r\n  mix-blend-mode: ${(props) => (props.mixBlend ? 'difference' : 'none')};\r\n`\r\nconst CursorRing = styled.div.attrs((props) => ({\r\n  style: {\r\n    transform: `translate(${props.x - props.ringSize / 2.2}px, ${\r\n      props.y - props.ringSize / 2.2\r\n    }px)`\r\n  }\r\n}))`\r\n  width: ${(props) => (props.ringSize ? props.ringSize + 'px' : '36px')};\r\n  height: ${(props) => (props.ringSize ? props.ringSize + 'px' : '36px')};\r\n  border-radius: 100%;\r\n  border: ${(props) =>\r\n    props.color ? `2px solid ${props.color}` : '2px solid black'};\r\n  transition: ${(props) =>\r\n    props.transitionTime\r\n      ? `transform ${props.transitionTime}ms ease-out`\r\n      : 'transform 0.1s ease-out'};\r\n  pointer-events: none;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 999;\r\n  position: absolute;\r\n  mix-blend-mode: ${(props) => (props.mixBlend ? 'difference' : 'none')};\r\n  display: ${(props) => (props.noRing ? 'none' : 'block')};\r\n`\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled, {createGlobalStyle} from 'styled-components'\r\nimport { Cursor } from './cursor'\r\n\r\nexport const CursorProvider = ({ children, color, noRing, mixBlend, dotSize, ringSize, transitionTime }) => {\r\n    useEffect(() => {\r\n        { window.innerWidth < 600 ? setVisibility(false) : setVisibility(true) }\r\n        { cursor.x > window.innerWidth ? setCursor({x: x--, y: y}) : null }\r\n        { cursor.y > window.innerHeight ? setCursor({x: x, y: y--}) : null }\r\n    })\r\n    \r\n    const [cursor, setCursor] = useState({x: 0, y: 0})\r\n    const [visibility, setVisibility] = useState(true)\r\n\r\n    return (\r\n    <CursorWrapper onMouseMove={(e) => setCursor({x: e.pageX, y: e.pageY})}>\r\n        <GlobalStyle/>\r\n        {visibility ? <Cursor \r\n                        color={color} \r\n                        noRing={noRing} \r\n                        ringSize={ringSize}\r\n                        transitionTime={transitionTime}\r\n                        x={cursor.x} \r\n                        y={cursor.y}/> \r\n                : null}\r\n        {children}\r\n    </CursorWrapper>)\r\n}\r\n\r\nconst CursorWrapper = styled.div`\r\n    position: fixed;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    z-index: 999;\r\n`\r\nconst GlobalStyle = createGlobalStyle`\r\n* {\r\n    cursor: none !important;\r\n}\r\n`","import React, { useState } from 'react'\r\nimport { CursorProvider } from 'react-cursor'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst App = () => {\r\n  \r\n  const [ color, setColor ] = useState('black')\r\n  const [ transition, setTransition ] = useState(100)\r\n  const [ ring, setRing ] = useState(false)\r\n  const [ ringSize, setRingSize ] = useState(36)\r\n\r\n  return (\r\n    <CursorProvider color={color} \r\n                    noRing={ring}  \r\n                    ringSize={ringSize}\r\n                    transitionTime={transition}>\r\n      <Text>Simple React Custom Cursor Component<br/>No lags is achieved by using transform property, which is rendered by GPU, not CPU<br/>You can play with props in the form under</Text>\r\n      <ControlsWrapper>\r\n        <Controls>\r\n          <div>Color</div>\r\n          <div>color prop :string</div>\r\n          <input type=\"text\"\r\n          value={color}\r\n          onChange={e => setColor(e.target.value)}\r\n          placeholder=\"Type color here in hex or valid css color like yellow\"\r\n          />\r\n        </Controls>\r\n        <Controls>\r\n          <div>Transition in ms</div>\r\n          <div>transitionTime prop :number</div>\r\n          <input type=\"number\"\r\n          value={transition}\r\n          onChange={e => setTransition(e.target.value)}\r\n          placeholder=\"Type transition duration in ms\"\r\n          />\r\n        </Controls>\r\n        <Controls>\r\n          <div>Ring</div>\r\n          <div>noRing prop :boolean</div>\r\n          <button onClick={() => setRing(!ring)}>{ring ? 'Enable ring' : 'Disable ring'}</button>\r\n        </Controls>\r\n        <Controls>\r\n          <div>Ring Size</div>\r\n          <div>ringSize prop :number</div>\r\n          <input type=\"number\"\r\n          value={ringSize}\r\n          onChange={e => setRingSize(e.target.value)}\r\n          placeholder=\"Type size of the ring\"\r\n          />\r\n        </Controls>\r\n        \r\n      </ControlsWrapper>\r\n    </CursorProvider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\nconst ControlsWrapper = styled.div`\r\n  width: 1000px;\r\n  display: flex;\r\n  margin: 10% auto;\r\n  justify-content: space-around;\r\n`\r\n\r\nconst Controls = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`\r\nconst Text = styled.div`\r\n  font-size: 36px;\r\n  text-align: center;\r\n  height: 500px;\r\n`","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}